#version 460 core
layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

#define EPSILON 0.0000001f

layout (rgba32f, binding = 0) writeonly uniform image2D imageOutput;

uniform vec3 cameraPosition;
uniform vec3 originPixel;
uniform vec3 pixelDeltaU;
uniform vec3 pixelDeltaV;
uniform ivec2 imageSize;


void main()
{
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    if (gid.x >= imageSize.x || gid.y >= imageSize.y)
	{
        return;
    }
	
	vec3 pixelPosition = originPixel + float(gid.x) * pixelDeltaU + float(gid.y) * pixelDeltaV;
	vec3 direction = normalize(pixelPosition - cameraPosition);
	
	
    imageStore(imageOutput, gid, pixelColor);
}